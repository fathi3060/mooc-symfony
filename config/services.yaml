# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    nb_per_page : 3

    locale: 'fr' # ou fr suivant ta principale locale
    app.locales: en|fr| # liste des locales-> attention au dernier |, il sera tres utile pour le routing par langue

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    oc_platform.antispam: 
        class: App\Service\Antispam\OCAntispam
        arguments:
            $mailer: "@mailer"
            #$locale:  '%kernel.default_locale%'
            #$minLength : 50
        calls:
            - [ setLocale, ['%kernel.default_locale%'] ]
            - [ setminLength, [50] ]
        public: true
        
    #App\Service\Antispam\OCAntispam: '@oc_platform.antispam'
    oc_platform.email.application_mailer:
        class: App\Email\ApplicationMailer
        arguments:
            - "@mailer"
    
#    oc_platform.twig.antispam_extension:
#        class: App\PlatformBundle\Twig\AntispamExtension
#        public: false
#        arguments:
#        - "@oc_platform.antispam"
#        tags:
#        - { name: twig.extension }

    oc_platform.form.ckeditor:
        class: App\PlatformBundle\Form\CkeditorType
        tags:
            - { name: form.type, alias: ckeditor }

    oc_platform.doctrine_listener.application_creation:
        class: App\DoctrineListener\ApplicationCreationListener
        arguments:
            - "@oc_platform.email.application_mailer"
        tags:
            - { name: doctrine.event_listener, event: postPersist }

    oc_platform.advert_purger:
        class: App\Purge\Purge
        arguments: [ "@doctrine.orm.entity_manager" ]
        public: true

    oc_platform.validator.antiflood:                              # Le nom du service
        class: App\Validator\AntifloodValidator     # La classe du service, ici notre validateur déjà créé
        arguments: ["@request_stack", "@doctrine.orm.entity_manager"] # Les données qu'on injecte au service : la requête et l'EntityManager
        tags:
            - { name: validator.constraint_validator, alias: oc_platform_antiflood }  # C'est avec l'alias qu'on retrouvera le service

    oc_platform.beta.html_adder:
        class: App\PlatformBundle\Beta\BetaHTMLAdder
    
    oc_platform.beta.listener:
        class: App\PlatformBundle\Beta\BetaListener
        arguments:
            - "@oc_platform.beta.html_adder"
            - "2020-09-18"
        tags:
            - { name: kernel.event_listener, event: kernel.response, method: processBeta, priority: 2 }

    oc_platform.bigbrother.message_notificator:
        class: App\PlatformBundle\Bigbrother\MessageNotificator
        arguments:
            - "@mailer"

    oc_platform.bigbrother.message_listener:
        class: App\PlatformBundle\Bigbrother\MessageListener
        arguments:
            - "@oc_platform.bigbrother.message_notificator"
            - ["alexandre", "marine", "pierre"]
        tags:
            - { name: kernel.event_subscriber }
            #- { name: kernel.event_listener, event: oc_platform.post_message, method: processMessage }
    twig.extension.intl:
        class: Twig_Extensions_Extension_Intl
        tags:
            - { name: twig.extension }

    oc_platform.paramconverter.json:
        class: App\PlatformBundle\ParamConverter\JsonParamConverter
        tags:
            - { name: request.param_converter }
