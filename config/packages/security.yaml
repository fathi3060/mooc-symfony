security:
    encoders:
        #Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\User: sha512
        #FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        #ROLE_ADMIN:       ROLE_USER
        #ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

        # Un admin hérite des droits d'auteur et de modérateur
        ROLE_ADMIN:       [ROLE_AUTEUR, ROLE_MODERATEUR]
        # On garde ce rôle superadmin, il nous resservira par la suite
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        #in_memory:
        #    memory:
        #        users:
        #            user:  { password: userpass, roles: [ 'ROLE_USER' ] }
        #            admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

        main:
            id: fos_user.user_provider.username

        #    entity:
        #        class:    App\Entity\User
        #        property: username

        #fos_userbundle:
        #    id: fos_user.user_provider.username
            
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main_login:
            # Cette expression régulière permet de prendre /login (mais pas /login_check !)
            pattern:   ^/login$
            anonymous: true # On autorise alors les anonymes sur ce pare-feu
        main:
            pattern:   ^/
            anonymous: true
            provider:   main     # in_memory
            #csrf_token_generator: security.csrf.token_manager
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
            logout:
                path:       fos_user_security_logout
                target:     fos_user_security_login
            remember_me:
                secret:   '%kernel.secret%' # %secret% est un paramètre de parameter
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/advert/add, roles: IS_AUTHENTICATED_FULLY }
        
        #- { path: ^/admin, ip: 127.0.0.1, requires_channel: https }
        # - { path: ^/profile, roles: ROLE_USER }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
